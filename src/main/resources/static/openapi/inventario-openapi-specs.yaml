openapi: 3.1.0
info:
  title: Inventario OpenAPI definition
  description: "An API for a web-based system to manage inventory stocks and handle stocks analytics"
  version: 1.0.0
  contact:
    email: pshameed99@gmail.com
servers:
  - url: http://localhost:8080/inventario/api/v1

tags:
  - name: Authentication
    description: Authentication endpoints for login and token generation
  - name: UserEntity
    description: Operations about userEntity management
  - name: Customer
    description: Operations about customer management
  - name: Product
    description: Operations about product management
  - name: Category
    description: Operations about category management
  - name: Supplier
    description: Operations about supplier management
  - name: Purchase Order
    description: Operations about purchase order management
  - name: Sale
    description: Operations about sales management
  - name: Unit Of Measure
    description: Operations about unit of measure management
  - name: Product Return
    description: Operations about product return management

paths:
  # GetALL/Update/Add Entities
  /products:
    $ref: "paths/v1/products.yaml"
  /customers:
    $ref: "paths/v1/customers.yaml"
  /suppliers:
    $ref: "paths/v1/suppliers.yaml"
  /categories:
    $ref: "paths/v1/categories.yaml"
  /unit-of-measures:
    $ref: "paths/v1/unit-of-measures.yaml"
  /purchase-orders:
    $ref: "paths/v1/purchase-orders.yaml"
  /sales:
    $ref: "paths/v1/sales.yaml"
  /product-returns:
    $ref: "paths/v1/product-returns.yaml"

  # Get/Delete an Entity By ID
  /products/{id}:
    $ref: "paths/v1/products_{id}.yaml"
  /customers/{id}:
    $ref: "paths/v1/customers_{id}.yaml"
  /suppliers/{id}:
    $ref: "paths/v1/suppliers_{id}.yaml"
  /categories/{id}:
    $ref: "paths/v1/categories_{id}.yaml"
  /unit-of-measures/{id}:
    $ref: "paths/v1/unit-of-measures_{id}.yaml"
  /purchase-orders/{id}:
    $ref: "paths/v1/purchase-orders_{id}.yaml"
  /sales/{id}:
    $ref: "paths/v1/sales_{id}.yaml"
  /product-returns/{id}:
    $ref: "paths/v1/product-returns_{id}.yaml"

  # Non-standard CRUD Operations
  /purchase-orders/receive/{id}:
    $ref: "paths/v1/purchase-orders_receive.yaml"


  # security and users
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login to generate a JWT token
      requestBody:
        description: Credentials for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        200:
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        401:
          description: Unauthorized (Invalid credentials)

  /users:
    get:
      tags:
        - UserEntity
      summary: Retrieve all users
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: List of users
        403:
          description: Forbidden (Insufficient permissions)
    post:
      tags:
        - UserEntity
      summary: Create a new user
      security:
        - BearerAuth: [ ]
      responses:
        201:
          description: User created successfully
        403:
          description: Forbidden (Insufficient permissions)

  /users/changePassword/{username}:
    patch:
      tags:
        - UserEntity
      summary: Change password for specific user (only for admin)
      security:
        - BearerAuth: [ ]
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Password change request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
      responses:
        201:
          description: Password updated successfully
        403:
          description: Forbidden (Insufficient permissions)

  /users/changePassword:
    patch:
      tags:
        - UserEntity
      summary: Change password for the authenticated user
      security:
        - BearerAuth: [ ]
      requestBody:
        description: Password change request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
      responses:
        201:
          description: Password updated successfully
        403:
          description: Forbidden (Insufficient permissions)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    PasswordChangeRequest:
      type: object
      properties:
        newPassword:
          type: string
      required:
        - newPassword

security:
  - BearerAuth: []
